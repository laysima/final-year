"use client";
import { Box, ChakraProvider, chakra } from "@chakra-ui/react";
import { CacheProvider } from "@chakra-ui/next-js";
import { Flex } from "@chakra-ui/react";
import "./globals.css";
import { Inter } from "next/font/google";
import { useState, useEffect, useRef } from 'react';
import { motion, useScroll, AnimatePresence } from "framer-motion";
import {
  QueryClient,
  QueryClientProvider,
} from '@tanstack/react-query'

//components
import { Navbar } from "./components/Navbar";
import { Footer } from "./components/Footer";
import { getCookie } from "cookies-next";
const inter = Inter({ subsets: ["latin"] });




// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

export default function RootLayout({ children }: any) {
  const [user, setUser] = useState(null)

  const queryClient = new QueryClient()

  const getUserCookie = async () => {
    const cookie = getCookie('user')
    console.log("Cookie value:", cookie);  // Debug log
  
    if (cookie) {
      const user = JSON.parse(cookie)
      setUser(user)
      console.log("User set:", user);  // Debug log
    }
  }

  const { scrollYProgress } = useScroll();

  useEffect(() => {
    const fetchUserCookie = async () => {
      await getUserCookie();
    };
    
    fetchUserCookie();
  }, [])

  return (
    <html lang="en">
      <head>
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" />
        <link
          href="https://fonts.googleapis.com/css2?family=Outfit:wght@100..900&display=swap"
          rel="stylesheet"
        ></link>
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />
        <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
        <meta name="msapplication-TileColor" content="#da532c" />
        <meta name="theme-color" content="#ffffff"></meta>
      </head>

      <body>
     
        <CacheProvider>
          <ChakraProvider>
          <QueryClientProvider client={queryClient}>
          <Navbar />
          <AnimatePresence>
          <motion.div
              initial={{opacity:0, y:30}}
              animate={{opacity:1, y:0}}
              exit={{opacity:0, y:15}}
              transition={{delay:0.25}}>
            <Box minH={'100dvh'}>{children}</Box>
            </motion.div>
          </AnimatePresence>
            <Footer />
            </QueryClientProvider>
          </ChakraProvider>
        </CacheProvider>
      </body>
    </html>
  );
}
